services:

  mariadb:
    container_name: mariadb
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - sql_root_password
    - sql_user_password
    - sql_admin_password
    volumes:
    - mariadb:/var/lib/mysql
    networks:
    - inception
    restart: unless-stopped
    healthcheck:
     test: ["CMD", "mariadb-admin ping", "-h", "localhost", "-u", "$$SQL_USER", "-p$$SQL_USER_PASSWORD"]
     interval: 30s
     timeout: 5s
     retries: 3
     start_period: 10s

  wordpress:
    container_name: wordpress
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - wp_admin_password
    - wp_user_password
    - sql_user_password
    - redis_password
    volumes:
    - wordpress:/var/www/wordpress
    networks:
    - inception
    depends_on:
    - mariadb
    - redis
    # - mariadb:
    #   condition: service_healthy
    # - redis:
    #   condition: service_healthy
    restart: unless-stopped

  nginx:
    container_name: nginx
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    volumes:
    - wordpress:/var/www/wordpress
    networks:
    - inception
    depends_on:
    - wordpress
    - adminer
    # - staticsite
    ports:
    - "443:443"
    - "80:80"
    # restart after crash
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fk", "https://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  
  redis:
    container_name: redis
    build:
      context: requirements/bonus/redis
      dockerfile: Dockerfile
    # cap_add:
    # - SETGID
    # - SETUID
    env_file: .env
    secrets:
    - redis_password
    networks:
    - inception
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  adminer:
    container_name: adminer
    build:
      context: requirements/bonus/adminer
      dockerfile: Dockerfile
    env_file: .env
    networks:
    - inception
    depends_on:
    - mariadb
    restart: unless-stopped

  ftpserver:
    container_name: ftpserver
    build:
      context: requirements/bonus/ftp
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - ftp_user_password
    networks:
    - inception
    ports:
    - "2121:21"
    - "21000-21010:21000-21010"
    volumes:
    - wordpress:/var/www/wordpress
    depends_on:
    - wordpress
    restart: unless-stopped

  staticsite:
    container_name: staticsite
    build:
      context: requirements/bonus/static
      dockerfile: Dockerfile
    # volumes:
    # - wordpress:/var/www/wordpress
    env_file: .env
    networks:
    - inception
    restart: unless-stopped

volumes:
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${DATA_DIR}/wordpress'
  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${DATA_DIR}/mariadb'
  adminer:
    name: adminer
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR}/adminer
  redis:
    name: redis
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR}/redis

networks:
  inception:
    name: inception
    driver: bridge

secrets:
  wp_admin_password:
    file: ../secrets/wp_admin_password.txt
  wp_user_password:
    file: ../secrets/wp_user_password.txt
  sql_admin_password:
    file: ../secrets/sql_admin_password.txt
  sql_user_password:
    file: ../secrets/sql_user_password.txt
  sql_root_password:
    file: ../secrets/sql_root_password.txt
  redis_password:
    file: ../secrets/redis_password.txt
  ftp_user_password:
    file: ../secrets/ftp_user_password.txt