services:

  mariadb:
    pull_policy: never
    container_name: mariadb
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - sql_root_password
    - sql_user_password
    - sql_admin_password
    volumes:
    - mariadb:/var/lib/mysql
    networks:
    - inception
    restart: unless-stopped
    expose:
    - "3306"
    healthcheck:
     test: ["CMD-SHELL", "mysqladmin ping --socket=/run/mysqld/mysqld.sock -u root --password=$$(cat /run/secrets/sql_root_password) || exit 1"]
     interval: 30s
     timeout: 5s
     retries: 5
     start_period: 30s

  wordpress:
    pull_policy: never
    container_name: wordpress
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - wp_admin_password
    - wp_user_password
    - sql_user_password
    - redis_password
    volumes:
    - wordpress:/var/www/wordpress
    networks:
    - inception
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wp core is-installed --path=/var/www/wordpress || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  nginx:
    pull_policy: never
    container_name: nginx
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    volumes:
    - wordpress:/var/www/wordpress
    networks:
    - inception
    depends_on:
      wordpress:
        condition: service_healthy
      adminer:
        condition: service_healthy
      staticsite:
        condition: service_healthy
      portainer:
        condition: service_healthy
    expose:
    - "443"
    - "80"
    ports:
    - "443:443"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsSk", "https://localhost/healthy"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
  
  redis:
    pull_policy: never
    container_name: redis
    build:
      context: requirements/bonus/redis
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - redis_password
    volumes:
    - redis:/data
    networks:
    - inception
    restart: unless-stopped
    expose:
    - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  adminer:
    pull_policy: never
    container_name: adminer
    build:
      context: requirements/bonus/adminer
      dockerfile: Dockerfile
    env_file: .env
    networks:
    - inception
    volumes:
    - adminer:/var/www/html
    depends_on:
      mariadb:
        condition: service_healthy
      wordpress:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "php /healthcheck.php"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  ftpserver:
    container_name: ftpserver
    build:
      context: requirements/bonus/ftp
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - ftp_user_password
    networks:
    - inception
    ports:
    - "2121:2121"
    - "20:20"
    - "21000-21010:21000-21010"
    volumes:
    - wordpress:/var/www/wordpress
    depends_on:
      nginx:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "printf '' | timeout 3 telnet 127.0.0.1 21 2>/dev/null | head -n1 | grep -q '^220 '"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  portainer:
    pull_policy: never
    container_name: portainer
    build:
      context: requirements/bonus/portainer
      dockerfile: Dockerfile
    env_file: .env
    secrets:
    - portainer_admin_password
    volumes:
    - portainer:/data
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
    - inception
    restart: unless-stopped
    expose:
    - "9000"
    - "9443"
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 9000 || nc -z 127.0.0.1 9443"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  staticsite:
    container_name: staticsite
    build:
      context: requirements/bonus/static
      dockerfile: Dockerfile
    env_file: .env
    networks:
    - inception
    restart: unless-stopped
    expose:
    - "8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${DATA_DIR}/wordpress'
  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${DATA_DIR}/mariadb'
  adminer:
    name: adminer
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR}/adminer
  redis:
    name: redis
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR}/redis
  portainer:
    name: portainer
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_DIR}/portainer

networks:
  inception:
    name: inception
    driver: bridge

secrets:
  wp_admin_password:
    file: ../secrets/wp_admin_password.txt
  wp_user_password:
    file: ../secrets/wp_user_password.txt
  sql_admin_password:
    file: ../secrets/sql_admin_password.txt
  sql_user_password:
    file: ../secrets/sql_user_password.txt
  sql_root_password:
    file: ../secrets/sql_root_password.txt
  redis_password:
    file: ../secrets/redis_password.txt
  ftp_user_password:
    file: ../secrets/ftp_user_password.txt
  portainer_admin_password:
    file: ../secrets/portainer_admin_password.txt